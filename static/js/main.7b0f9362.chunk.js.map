{"version":3,"sources":["pages/SignUp/Auth.module.css","pages/Dashboard/Dashboard.module.css","components/Formik/Field.jsx","components/Formik/FormButton.jsx","components/Header/Header.jsx","api/Login/signIn.js","pages/Login/Login.jsx","components/Formik/validationSignUp.js","api/SignUp/registration.js","pages/SignUp/SignUp.jsx","store/store.js","store/sub.js","components/SingleList/SingleList.jsx","functions/SingleList/formats.js","components/Todo/Todo.jsx","api/List/listActions.js","components/List/List.jsx","api/Dashboard/allUserLists.js","functions/Dashboard/filterByStatus.js","pages/Dashboard/Dashboard.jsx","App.jsx","index.js","components/Todo/Todo.module.css","components/Header/Header.module.css","components/SingleList/SingleList.module.css","components/List/List.module.css","components/Formik/Field.module.css","components/Formik/FormButton.module.css"],"names":["module","exports","Field","rest","useField","field","meta","error","touched","className","styles","container","FormButton","text","type","btn","Header","useCookies","cookies","removeCookie","user","header","name","onClick","button","icon","signIn","values","a","fetch","process","method","headers","body","JSON","stringify","response","json","Login","setCookie","useState","message","setMessage","history","useHistory","logIn","data","statusCode","messages","e","jwt","push","initialValues","identifier","password","onSubmit","form","formText","id","placeholder","action","link","to","validation","yup","username","min","defined","email","repeatPassword","oneOf","registration","SignUp","status","setStatus","createAccount","setTimeout","validationSchema","upper","success","Store","createStore","initialState","isNew","actions","getId","getState","setState","useSweetState","createHook","SingleList","published_at","task","setOpenList","date","Date","year","getFullYear","month","getMonth","day","getDate","formatDate","count","completed","filter","isDone","unCompleted","length","countTasks","list","listDate","Todo","setList","content","todo","square","delete","newTodos","splice","getSingleList","Authorization","createNewList","updateList","deleteList","List","refreshLists","state","listData","singleTask","setSingleTask","checkNameIsNotEmpty","closeAndUpdate","handleCreateList","handleUpdateList","handleDeleteList","useEffect","create","label","onChange","target","value","containerTodos","map","key","containerAddInput","fieldAddTask","containerButtons","btnTodo","cancel","add","btnList","close","allUserLists","correct","filterByStatus","firstElement","secondElement","firstCompleted","secondCompleted","Dashboard","openList","searchKeyWord","setSearchKeyWord","sortOption","setSortOption","lists","setLists","hasError","setHasError","getLists","useCallback","dashboard","blur","main","labelSelect","select","disabled","todos","toLowerCase","includes","sort","completedMost","completedLeast","containerNewTodo","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b0f9362.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__3sNPm\",\"formText\":\"Auth_formText__1g8l8\",\"upper\":\"Auth_upper__2eOfG\",\"form\":\"Auth_form__15skY\",\"icon\":\"Auth_icon__2uB7E\",\"action\":\"Auth_action__1IGJK\",\"link\":\"Auth_link__3CDoQ\",\"text\":\"Auth_text__1N5zJ\",\"error\":\"Auth_error__3GZiJ\",\"success\":\"Auth_success__3VbrN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__1TtZL\",\"main\":\"Dashboard_main__2sLdU\",\"header\":\"Dashboard_header__Z_7Zm\",\"containerNewTodo\":\"Dashboard_containerNewTodo__25Qqp\",\"btn\":\"Dashboard_btn__1cr7v\",\"label\":\"Dashboard_label__2ZL0Z\",\"labelSelect\":\"Dashboard_labelSelect__3DKvi\",\"field\":\"Dashboard_field__3AVyE\",\"select\":\"Dashboard_select__1qO34\",\"blur\":\"Dashboard_blur__2nqZk\"};","import styles from './Field.module.css';\r\nimport { useField } from 'formik';\r\n\r\nconst Field = ({ ...rest }) => {\r\n  const [field, meta] = useField(rest);\r\n\r\n  const error = meta.touched && meta.error ? meta.error : '';\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <input\r\n        {...rest}\r\n        {...field}\r\n        className={styles.field}\r\n        data-testid={rest['data-testid'] || 'input'}\r\n      />\r\n      <p data-testid=\"message-validation\" className={styles.error}>\r\n        {error}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Field;\r\n","import styles from './FormButton.module.css';\r\n\r\nconst FormButton = ({ text }) => {\r\n  return (\r\n    <button data-testid=\"btn-auth\" type=\"submit\" className={styles.btn}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import { useCookies } from 'react-cookie';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n  const [cookies, , removeCookie] = useCookies();\r\n\r\n  const { user } = cookies;\r\n  const logOut = () => {\r\n    removeCookie('user');\r\n  };\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <div>\r\n        <h2 className={styles.name}>ToDo-List</h2>\r\n      </div>\r\n      {user && (\r\n        <div>\r\n          <button onClick={logOut} className={styles.button}>\r\n            <i className={`fas fa-sign-out-alt ${styles.icon}`}></i>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const signIn = async values => {\r\n  const response = await fetch(`${process.env.REACT_APP_API}/auth/local`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(values),\r\n  });\r\n\r\n  const json = await response.json();\r\n\r\n  return json;\r\n};\r\n","import { Link, useHistory } from 'react-router-dom';\r\nimport Field from '../../components/Formik/Field';\r\nimport FormButton from '../../components/Formik/FormButton';\r\nimport { Formik, Form } from 'formik';\r\nimport styles from '../SignUp/Auth.module.css';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useState } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport { signIn } from '../../api/Login/signIn';\r\n\r\nconst Login = () => {\r\n  const [, setCookie] = useCookies();\r\n  const [message, setMessage] = useState('');\r\n  const history = useHistory();\r\n\r\n  const logIn = async values => {\r\n    const data = await signIn(values);\r\n\r\n    if (data.statusCode === 400) {\r\n      try {\r\n        setMessage(data.message[0].messages[0].message);\r\n      } catch (e) {\r\n        setMessage('Error');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (data.jwt) {\r\n      setCookie('user', data.jwt);\r\n      history.push('/dashboard');\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className={styles.container}>\r\n        <Formik\r\n          initialValues={{\r\n            identifier: '',\r\n            password: '',\r\n          }}\r\n          onSubmit={values => logIn(values)}\r\n        >\r\n          <Form className={styles.form}>\r\n            <h3 className={styles.formText} data-testid=\"headline\">\r\n              Login\r\n            </h3>\r\n            <Field\r\n              name=\"identifier\"\r\n              type=\"text\"\r\n              id=\"identifier\"\r\n              placeholder=\"Email or Username\"\r\n              key=\"identifier-field\"\r\n              data-testid=\"login-field\"\r\n            />\r\n\r\n            <Field\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              key=\"password-field\"\r\n            />\r\n            <p className={styles.error}>{message}</p>\r\n            <FormButton text=\"Login\" />\r\n          </Form>\r\n        </Formik>\r\n        <div className={styles.action}>\r\n          <span className={styles.text}>or</span>\r\n          <Link className={styles.link} to=\"/registration\">\r\n            create an account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import * as yup from 'yup';\r\n\r\nexport const validation = yup.object({\r\n  username: yup\r\n    .string()\r\n    .min(1, 'Must be at least 2 characters long')\r\n    .defined('Field is required'),\r\n  email: yup.string().email('Email is invalid').defined('Email is required'),\r\n  password: yup\r\n    .string()\r\n    .min(8, 'Password to short! Must be at least 8 characters long')\r\n    .defined('Field is required'),\r\n  repeatPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref('password'), null], 'Passwords do not match')\r\n    .defined('Field is required'),\r\n});\r\n","export const registration = async values => {\r\n  const user = {\r\n    username: values.username,\r\n    email: values.email,\r\n    password: values.password,\r\n  };\r\n\r\n  const response = await fetch(\r\n    `${process.env.REACT_APP_API}/auth/local/register`,\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    }\r\n  );\r\n\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n","import { Formik, Form } from 'formik';\r\nimport FormButton from '../../components/Formik/FormButton';\r\nimport Field from '../../components/Formik/Field';\r\nimport styles from './Auth.module.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { validation } from '../../components/Formik/validationSignUp';\r\nimport { useState } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport { registration } from '../../api/SignUp/registration';\r\n\r\nconst SignUp = () => {\r\n  const [status, setStatus] = useState({\r\n    type: '',\r\n    message: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const createAccount = async values => {\r\n    const data = await registration(values);\r\n\r\n    if (data.statusCode === 400) {\r\n      try {\r\n        setStatus({\r\n          type: 'invalid',\r\n          message: data.message[0].messages[0].message,\r\n        });\r\n      } catch {\r\n        setStatus({ type: 'invalid', message: 'Error' });\r\n      }\r\n    }\r\n\r\n    if (data.jwt) {\r\n      setStatus({\r\n        type: 'valid',\r\n        message: 'Your account has been created',\r\n      });\r\n      setTimeout(() => {\r\n        history.push('/');\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <div className={styles.container}>\r\n        <Link to=\"/\">\r\n          <i className={`fas fa-long-arrow-alt-left fa-3x ${styles.icon}`}></i>\r\n        </Link>\r\n        <Formik\r\n          initialValues={{\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n          }}\r\n          validationSchema={validation}\r\n          onSubmit={values => createAccount(values)}\r\n        >\r\n          <Form className={styles.form}>\r\n            <h3 className={`${styles.formText} ${styles.upper}`}>\r\n              Create an new account\r\n            </h3>\r\n            <Field\r\n              name=\"username\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n              placeholder=\"Username\"\r\n              key=\"username-field\"\r\n              data-testid=\"username\"\r\n            />\r\n            <Field\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Email\"\r\n              key=\"email-field\"\r\n            />\r\n            <Field\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              key=\"password-field\"\r\n            />\r\n            <Field\r\n              name=\"repeatPassword\"\r\n              type=\"password\"\r\n              id=\"repeat-password\"\r\n              placeholder=\"Repeat password\"\r\n              key=\"repeat-password-field\"\r\n            />\r\n            <FormButton text=\"Create\" />\r\n            <p\r\n              className={\r\n                status.type === 'invalid'\r\n                  ? `${styles.error}`\r\n                  : `${styles.success}`\r\n              }\r\n            >\r\n              {status.message}\r\n            </p>\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { Action, createStore } from 'react-sweet-state';\r\n\r\nconst initialState = {\r\n  data: {\r\n    id: null,\r\n    isNew: true,\r\n  },\r\n};\r\n\r\nconst actions = {\r\n  getId:\r\n    (id, isNew) =>\r\n    ({ getState, setState }) => {\r\n      setState({\r\n        data: {\r\n          id,\r\n          isNew,\r\n        },\r\n      });\r\n    },\r\n};\r\n\r\nconst Store = createStore({ initialState, actions });\r\n\r\nexport default Store;\r\n","import { createHook } from 'react-sweet-state';\r\nimport Store from './store';\r\n\r\nexport const useSweetState = createHook(Store);\r\n","import styles from './SingleList.module.css';\r\nimport { useSweetState } from '../../store/sub';\r\nimport { countTasks, formatDate } from '../../functions/SingleList/formats';\r\n\r\nconst SingleList = ({ name, published_at, id, task, setOpenList }) => {\r\n  const date = formatDate(published_at);\r\n  const count = countTasks(task);\r\n\r\n  const [, actions] = useSweetState();\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        actions.getId(id, false);\r\n        setOpenList(true);\r\n      }}\r\n      className={styles.list}\r\n      data-testid=\"list\"\r\n    >\r\n      <h5 data-testid=\"name-of-list\" className={styles.name}>\r\n        {name}\r\n      </h5>\r\n      <p className={styles.listDate}>Created at: {date}</p>\r\n      <p data-testid=\"count-list\" className={styles.count}>\r\n        {count}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleList;\r\n","export const formatDate = published_at => {\r\n  const date = new Date(published_at);\r\n  const year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let day = date.getDate();\r\n\r\n  if (month < 10) month = `0${month}`;\r\n  if (day < 10) day = `0${day}`;\r\n\r\n  return `${day}-${month}-${year}`;\r\n};\r\n\r\nexport const countTasks = task => {\r\n  const completed = task.filter(task => task.isDone === true);\r\n  const unCompleted = task.filter(task => task.isDone === false);\r\n\r\n  return `Completed: ${completed.length} Uncompleted: ${unCompleted.length} All: ${task.length}`;\r\n};\r\n","import styles from './Todo.module.css';\r\n\r\nconst Todo = ({ name, isDone, id, list, setList }) => {\r\n  const { task } = list;\r\n\r\n  const toggleStatus = () => {\r\n    task[id].isDone = task[id].isDone ? false : true;\r\n    setList({ ...list, task: [...task] });\r\n  };\r\n\r\n  const deleteTodo = () => {\r\n    const newTodos = [...task];\r\n\r\n    newTodos.splice(id, 1);\r\n\r\n    setList({ ...list, task: newTodos });\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.content} ${styles.todo}`}>\r\n      <button\r\n        onClick={toggleStatus}\r\n        className={`${styles.square} ${isDone ? styles.completed : null}`}\r\n      >\r\n        {isDone && <i className=\"fas fa-check\" />}\r\n      </button>\r\n      <p data-testid=\"todo-name\" className={styles.task}>\r\n        {name}\r\n      </p>\r\n      <button className={styles.delete} onClick={deleteTodo}>\r\n        <i className=\"fas fa-times\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","export const getSingleList = async (user, id) => {\r\n  const response = await fetch(\r\n    `${process.env.REACT_APP_API}/to-do-lists/${id}`,\r\n    {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${user}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const createNewList = async (user, list) => {\r\n  await fetch(`${process.env.REACT_APP_API}/to-do-lists`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${user}`,\r\n    },\r\n    body: JSON.stringify(list),\r\n  });\r\n};\r\n\r\nexport const updateList = async (user, list, id) => {\r\n  await fetch(`${process.env.REACT_APP_API}/to-do-lists/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${user}`,\r\n    },\r\n    body: JSON.stringify(list),\r\n  });\r\n};\r\n\r\nexport const deleteList = async (user, id) => {\r\n  await fetch(`${process.env.REACT_APP_API}/to-do-lists/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${user}`,\r\n    },\r\n  });\r\n};\r\n","import styles from './List.module.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport Todo from '../Todo/Todo';\r\nimport { useSweetState } from '../../store/sub';\r\nimport {\r\n  getSingleList,\r\n  createNewList,\r\n  updateList,\r\n  deleteList,\r\n} from '../../api/List/listActions';\r\n\r\nconst List = ({ setOpenList, refreshLists }) => {\r\n  const [state] = useSweetState();\r\n\r\n  const [list, setList] = useState({\r\n    name: '',\r\n    task: [],\r\n  });\r\n\r\n  const listData = state.data;\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [singleTask, setSingleTask] = useState({\r\n    name: '',\r\n    isDone: false,\r\n  });\r\n\r\n  const [cookies] = useCookies();\r\n  const { user } = cookies;\r\n\r\n  const handleAddNewTodo = () => {\r\n    if (singleTask.name.length > 0) {\r\n      setList({ ...list, task: [...list.task, singleTask] });\r\n      setSingleTask({ name: '', isDone: false });\r\n    }\r\n  };\r\n\r\n  const checkNameIsNotEmpty = () => {\r\n    if (list.name.length > 0) {\r\n      return true;\r\n    }\r\n    setMessage('Name of list cannot be empty');\r\n    return false;\r\n  };\r\n\r\n  const closeAndUpdate = () => {\r\n    refreshLists();\r\n    setOpenList(false);\r\n  };\r\n\r\n  const handleCreateList = async () => {\r\n    const correct = checkNameIsNotEmpty();\r\n    if (correct) {\r\n      await createNewList(user, list);\r\n      closeAndUpdate();\r\n    }\r\n  };\r\n\r\n  const handleUpdateList = async () => {\r\n    const correct = checkNameIsNotEmpty();\r\n    if (correct) {\r\n      await updateList(user, list, state.data.id);\r\n      closeAndUpdate();\r\n    }\r\n  };\r\n\r\n  const handleDeleteList = async () => {\r\n    await deleteList(user, state.data.id);\r\n    closeAndUpdate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state.data.id !== null) {\r\n      (async () => {\r\n        const data = await getSingleList(user, state.data.id);\r\n        setList({ name: data.name, task: data.task });\r\n      })();\r\n    }\r\n  }, [state.data.id, user]);\r\n\r\n  return (\r\n    <div data-testid=\"list\" className={styles.create}>\r\n      <div>\r\n        <div className={styles.label}>\r\n          <input\r\n            onChange={e => setList({ ...list, name: e.target.value })}\r\n            placeholder=\"List name\"\r\n            className={styles.field}\r\n            type=\"text\"\r\n            value={list.name}\r\n            data-testid=\"list-name\"\r\n          />\r\n        </div>\r\n        <div className={styles.containerTodos}>\r\n          {list.task.map(({ name, isDone }, key) => (\r\n            <Todo\r\n              key={key}\r\n              id={key}\r\n              list={list}\r\n              setList={setList}\r\n              name={name}\r\n              isDone={isDone}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className={styles.containerAddInput}>\r\n          <div className={styles.content}>\r\n            <button\r\n              onClick={() =>\r\n                setSingleTask({ ...singleTask, isDone: !singleTask.isDone })\r\n              }\r\n              className={`${styles.square} ${\r\n                singleTask.isDone ? styles.completed : null\r\n              }`}\r\n            >\r\n              {singleTask.isDone && <i className=\"fas fa-check\" />}\r\n            </button>\r\n            <input\r\n              placeholder=\"Task name\"\r\n              className={styles.fieldAddTask}\r\n              type=\"text\"\r\n              value={singleTask.name}\r\n              onChange={e =>\r\n                setSingleTask({ ...singleTask, name: e.target.value })\r\n              }\r\n              data-testid=\"todo-name\"\r\n            />\r\n          </div>\r\n          <div className={styles.containerButtons}>\r\n            <button\r\n              onClick={() => setSingleTask({ name: '', isDone: false })}\r\n              className={`${styles.btn} ${styles.btnTodo} ${styles.cancel}`}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={handleAddNewTodo}\r\n              className={`${styles.btn} ${styles.btnTodo} ${styles.add}`}\r\n            >\r\n              Add\r\n            </button>\r\n            <p className={styles.message}>{message}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.action}>\r\n        {!listData.isNew && (\r\n          <button\r\n            className={`${styles.btn} ${styles.btnList} ${styles.delete}`}\r\n            onClick={handleDeleteList}\r\n          >\r\n            Delete\r\n          </button>\r\n        )}\r\n        <button\r\n          onClick={() => {\r\n            setOpenList(false);\r\n          }}\r\n          className={`${styles.btn} ${styles.btnList} ${styles.close}`}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            listData.isNew ? handleCreateList() : handleUpdateList();\r\n          }}\r\n          className={`${styles.btn} ${styles.btnList} ${styles.add}`}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","export const allUserLists = async user => {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_API}/to-do-lists`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${user}`,\r\n      },\r\n    });\r\n\r\n    const json = await response.json();\r\n    return { json, correct: true };\r\n  } catch {\r\n    return { correct: false };\r\n  }\r\n};\r\n","export const filterByStatus = (firstElement, secondElement) => {\r\n  const firstCompleted = firstElement.task.filter(todo => todo.isDone === true);\r\n  const secondCompleted = secondElement.task.filter(\r\n    todo => todo.isDone === true\r\n  );\r\n\r\n  return { firstCompleted, secondCompleted };\r\n};\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useSweetState } from '../../store/sub';\r\nimport Header from '../../components/Header/Header';\r\nimport styles from './Dashboard.module.css';\r\nimport SingleList from '../../components/SingleList/SingleList';\r\nimport List from '../../components/List/List';\r\nimport { allUserLists } from '../../api/Dashboard/allUserLists';\r\nimport { filterByStatus } from '../../functions/Dashboard/filterByStatus';\r\n\r\nconst Dashboard = () => {\r\n  const [cookies] = useCookies();\r\n  const { user } = cookies;\r\n\r\n  const [, actions] = useSweetState();\r\n  const [openList, setOpenList] = useState(false);\r\n\r\n  const [searchKeyWord, setSearchKeyWord] = useState('');\r\n  const [sortOption, setSortOption] = useState('Sort by');\r\n\r\n  const [lists, setLists] = useState([]);\r\n\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const getLists = useCallback(async () => {\r\n    const data = await allUserLists(user);\r\n    if (data.correct) {\r\n      setLists(data.json);\r\n      return;\r\n    }\r\n\r\n    setHasError(true);\r\n  }, [user]);\r\n\r\n  const handleSearchLists = list => {\r\n    return list.name.toLowerCase().includes(searchKeyWord.toLowerCase());\r\n  };\r\n\r\n  const handleSortLists = (firstElement, secondElement) => {\r\n    switch (sortOption) {\r\n      case 'completed':\r\n        const completedMost = filterByStatus(firstElement, secondElement);\r\n        return (\r\n          completedMost.secondCompleted.length -\r\n          completedMost.firstCompleted.length\r\n        );\r\n\r\n      case 'uncompleted':\r\n        const completedLeast = filterByStatus(firstElement, secondElement);\r\n        return (\r\n          completedLeast.firstCompleted.length -\r\n          completedLeast.secondCompleted.length\r\n        );\r\n\r\n      case 'latest':\r\n        return new Date(firstElement.published_at) >\r\n          new Date(secondElement.published_at)\r\n          ? -1\r\n          : 1;\r\n      case 'amount':\r\n        return secondElement.task.length - firstElement.task.length;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLists();\r\n  }, [getLists]);\r\n\r\n  return (\r\n    <>\r\n      {openList && <List refreshLists={getLists} setOpenList={setOpenList} />}\r\n      {!hasError && (\r\n        <section\r\n          onClick={() => {\r\n            if (openList) setOpenList(false);\r\n          }}\r\n          className={`${styles.dashboard} ${openList ? styles.blur : null}`}\r\n        >\r\n          <Header />\r\n          <div className={styles.main}>\r\n            <div className={styles.header}>\r\n              <label className={styles.label}>\r\n                <input\r\n                  data-testid=\"input-search\"\r\n                  className={styles.field}\r\n                  placeholder=\"Search\"\r\n                  type=\"text\"\r\n                  value={searchKeyWord}\r\n                  onChange={e => setSearchKeyWord(e.target.value)}\r\n                />\r\n              </label>\r\n              <label className={styles.labelSelect}>\r\n                <select\r\n                  data-testid=\"select-sort\"\r\n                  onChange={e => setSortOption(e.target.value)}\r\n                  className={`${styles.field} ${styles.select}`}\r\n                  value={sortOption}\r\n                >\r\n                  <option value=\"Sort by\" disabled>\r\n                    Sort by\r\n                  </option>\r\n                  <option value=\"completed\">Most completed tasks</option>\r\n                  <option value=\"uncompleted\">Least completed tasks</option>\r\n                  <option value=\"latest\">Latest</option>\r\n                  <option value=\"amount\">Most tasks</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            <div className={styles.todos}>\r\n              {lists\r\n                .filter(handleSearchLists)\r\n                .sort(handleSortLists)\r\n                .map(({ id, name, published_at, task }) => {\r\n                  return (\r\n                    <SingleList\r\n                      id={id}\r\n                      key={id}\r\n                      name={name}\r\n                      published_at={published_at}\r\n                      task={task}\r\n                      setOpenList={setOpenList}\r\n                      openList={openList}\r\n                    />\r\n                  );\r\n                })}\r\n            </div>\r\n            <div className={styles.containerNewTodo}>\r\n              <button\r\n                onClick={() => {\r\n                  actions.getId(null, true);\r\n                  if (!openList) setOpenList(true);\r\n                }}\r\n                className={styles.btn}\r\n              ></button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { useCookies } from 'react-cookie';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Login from './pages/Login/Login';\nimport SignUp from './pages/SignUp/SignUp';\nimport Dashboard from './pages/Dashboard/Dashboard';\n\nconst App = () => {\n  const [cookies] = useCookies();\n  const { user } = cookies;\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route exact path=\"/dashboard\">\n            {user ? <Dashboard /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route exact path=\"/registration\">\n            {user ? <Redirect to=\"/dashboard\" /> : <SignUp />}\n          </Route>\n          <Route exact path=\"/\">\n            {user ? <Redirect to=\"/dashboard\" /> : <Login />}\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './stylesheets/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Todo_content__3sOmB\",\"todo\":\"Todo_todo__1rPHp\",\"square\":\"Todo_square__QHhHb\",\"completed\":\"Todo_completed__3mb2q\",\"task\":\"Todo_task__wevb8\",\"delete\":\"Todo_delete__1pbvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__lKNbk\",\"name\":\"Header_name__2LKKb\",\"icon\":\"Header_icon__38Vt7\",\"button\":\"Header_button__1Mz9f\",\"blur\":\"Header_blur__tXJLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"SingleList_list__2DPUH\",\"listDate\":\"SingleList_listDate__2AZl9\",\"name\":\"SingleList_name__2vw-s\",\"count\":\"SingleList_count__2kLLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"create\":\"List_create__1EigG\",\"containerAddInput\":\"List_containerAddInput__2GqPU\",\"containerTodos\":\"List_containerTodos__1nnYJ\",\"label\":\"List_label__1pdCd\",\"field\":\"List_field__27rqC\",\"fieldAddTask\":\"List_fieldAddTask__kRDQv\",\"content\":\"List_content__11bgd\",\"square\":\"List_square__k9Pyp\",\"containerButtons\":\"List_containerButtons__1gTWj\",\"btn\":\"List_btn__DDeh0\",\"btnTodo\":\"List_btnTodo__eqbau\",\"btnList\":\"List_btnList__12GnX\",\"cancel\":\"List_cancel__3pKE0\",\"add\":\"List_add__nMgHP\",\"action\":\"List_action__F_wBK\",\"close\":\"List_close__2QcJH\",\"delete\":\"List_delete__3XCyy\",\"task\":\"List_task__1Istp\",\"todo\":\"List_todo__std-Z\",\"completed\":\"List_completed__3RBkY\",\"fa-check\":\"List_fa-check___Zjnp\",\"message\":\"List_message__1h3UH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Field_container__19NGF\",\"field\":\"Field_field__gEjah\",\"error\":\"Field_error__1Gnx0\",\"label\":\"Field_label__25TRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FormButton_btn__3wAi0\"};"],"sourceRoot":""}