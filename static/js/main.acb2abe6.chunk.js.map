{"version":3,"sources":["components/Auth/Auth.module.css","components/Dashboard/Dashboard.module.css","components/Formik/Field.jsx","components/Formik/FormButton.jsx","components/Header/Header.jsx","components/Auth/Login.jsx","components/Formik/validationSignUp.js","components/Auth/SignUp.jsx","store/store.js","store/sub.js","components/Dashboard/TodoList/List/Todo/Todo.jsx","components/Dashboard/TodoList/List/List.jsx","components/Dashboard/TodoList/SingleList/SingleList.jsx","components/Dashboard/Dashboard.jsx","App.jsx","index.js","components/Dashboard/TodoList/List/List.module.css","components/Header/Header.module.css","components/Dashboard/TodoList/SingleList/SingleList.module.css","components/Formik/Field.module.css","components/Formik/FormButton.module.css"],"names":["module","exports","Field","rest","useField","field","meta","error","touched","useState","focus","setFocus","onFocus","onBlur","className","styles","label","FormButton","text","type","btn","Header","useCookies","cookies","removeCookie","user","header","name","onClick","button","icon","Login","setCookie","message","setMessage","history","useHistory","signIn","values","a","fetch","process","method","mode","headers","body","JSON","stringify","response","json","console","log","statusCode","messages","jwt","push","container","initialValues","identifier","password","onSubmit","form","formText","id","placeholder","action","link","to","validation","yup","username","min","defined","email","repeatPassword","oneOf","SignUp","status","setStatus","createAccount","setTimeout","validationSchema","success","Store","createStore","initialState","data","isNew","actions","getId","getState","setState","useSweetState","createHook","Todo","isDone","list","setList","task","content","todo","find","singleTodo","toggleStatus","square","completed","List","setOpenList","refreshLists","state","listData","singleTask","setSingleTask","getSingleList","Authorization","checkNameIsNotEmpty","x","length","closeAndUpdate","handleCreateList","handleUpdateList","handleDeleteList","useEffect","create","onChange","e","target","value","containerTodos","map","key","containerAddInput","fieldAddTask","containerButtons","cancel","add","delete","close","SingleList","published_at","listDate","date","Date","year","getFullYear","month","getMonth","day","getDate","formatDate","count","filter","unCompleted","countTasks","Dashboard","openList","searchKeyWord","setSearchKeyWord","sortOption","setSortOption","lists","setLists","hasError","setHasError","getLists","dashboard","blur","main","labelSelect","select","disabled","todos","toLowerCase","includes","sort","firstElement","secondElement","firstCompleted","secondCompleted","filterByStatus","containerNewTodo","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,SAAW,uBAAuB,KAAO,mBAAmB,KAAO,mBAAmB,OAAS,qBAAqB,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,oBAAoB,QAAU,wB,mBCApQD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,OAAS,0BAA0B,iBAAmB,oCAAoC,IAAM,uBAAuB,MAAQ,yBAAyB,YAAc,+BAA+B,MAAQ,yBAAyB,OAAS,0BAA0B,KAAO,0B,iMC4B3VC,EAzBD,SAAC,GAAiB,IAAZC,EAAW,oBAC7B,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KAEMC,EAAQD,EAAKE,SAAWF,EAAKC,MAAQD,EAAKC,MAAQ,GACxD,EAA0BE,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,wBACEC,QAAS,kBAAMD,GAAUD,IACzBG,OAAQ,kBAAMF,GAAUD,IACxBI,UAAWC,IAAOC,MAHpB,UAKE,6DACMb,GACAE,GAFN,IAGES,UAAWC,IAAOV,MAClB,cAAY,WAEd,mBAAG,cAAY,qBAAqBS,UAAWC,IAAOR,MAAtD,SACGA,Q,iBCbMU,EARI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpB,OACE,wBAAQ,cAAY,WAAWC,KAAK,SAASL,UAAWC,IAAOK,IAA/D,SACGF,K,kCCsBQG,EAxBA,WACb,MAAkCC,cAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KAEQC,EAASF,EAATE,KAKR,OACE,yBAAQX,UAAWC,IAAOW,OAA1B,UACE,8BACE,oBAAIZ,UAAWC,IAAOY,KAAtB,yBAEDF,GACC,8BACE,wBAAQG,QAXD,WACbJ,EAAa,SAUkBV,UAAWC,IAAOc,OAA3C,SACE,mBAAGf,UAAS,8BAAyBC,IAAOe,gBCgEzCC,EA1ED,WACZ,MAAsBT,cAAbU,EAAT,oBACA,EAA8BvB,mBAAS,IAAvC,mBAAOwB,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,cAEVC,EAAM,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACUC,MAAM,GAAD,OAAIC,uCAAJ,eAA4C,CACtEC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUT,KAPV,cACPU,EADO,gBAUMA,EAASC,OAVf,UAUPA,EAVO,OAWbC,QAAQC,IAAIF,GACY,MAApBA,EAAKG,WAZI,wBAaXlB,EAAWe,EAAKhB,QAAQ,GAAGoB,SAAS,GAAGpB,SAb5B,+BAiBTgB,EAAKK,IAjBI,wBAkBXtB,EAAU,OAAQiB,EAAKK,KACvBnB,EAAQoB,KAAK,cAnBF,+DAAH,sDAwBZ,OACE,qCACE,cAAC,EAAD,IACA,sBAAKzC,UAAWC,IAAOyC,UAAvB,UACE,cAAC,IAAD,CACEC,cAAe,CACbC,WAAY,GACZC,SAAU,IAEZC,SAAU,SAAAtB,GAAM,OAAID,EAAOC,IAL7B,SAOE,eAAC,IAAD,CAAMxB,UAAWC,IAAO8C,KAAxB,UACE,oBAAI/C,UAAWC,IAAO+C,SAAU,cAAY,WAA5C,mBAGA,cAAC,EAAD,CACEnC,KAAK,aACLR,KAAK,OACL4C,GAAG,aACHC,YAAY,qBACR,oBAGN,cAAC,EAAD,CACErC,KAAK,WACLR,KAAK,WACL4C,GAAG,WACHC,YAAY,YACR,kBAEN,mBAAGlD,UAAWC,IAAOR,MAArB,SAA6B0B,IAC7B,cAAC,EAAD,CAAYf,KAAK,eAGrB,sBAAKJ,UAAWC,IAAOkD,OAAvB,UACE,sBAAMnD,UAAWC,IAAOG,KAAxB,gBACA,cAAC,IAAD,CAAMJ,UAAWC,IAAOmD,KAAMC,GAAG,gBAAjC,yC,QCxEGC,EAAaC,IAAW,CACnCC,SAAUD,MAEPE,IAAI,EAAG,sCACPC,QAAQ,qBACXC,MAAOJ,MAAaI,MAAM,oBAAoBD,QAAQ,qBACtDb,SAAUU,MAEPE,IAAI,EAAG,yDACPC,QAAQ,qBACXE,eAAgBL,MAEbM,MAAM,CAACN,IAAQ,YAAa,MAAO,0BACnCG,QAAQ,uBCyGEI,EA/GA,WACb,MAA4BnE,mBAAS,CACnCU,KAAM,GACNc,QAAS,KAFX,mBAAO4C,EAAP,KAAeC,EAAf,KAKA5B,QAAQC,IAAIV,wCACZ,IAAMN,EAAUC,cAEV2C,EAAa,uCAAG,WAAMzC,GAAN,mBAAAC,EAAA,6DACdd,EAAO,CACX6C,SAAUhC,EAAOgC,SACjBG,MAAOnC,EAAOmC,MACdd,SAAUrB,EAAOqB,UAJC,SAOGnB,MAAM,GAAD,OACvBC,uCADuB,wBAE1B,CACEC,OAAQ,OACRE,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUtB,KAdL,cAOduB,EAPc,gBAkBDA,EAASC,OAlBR,OAoBI,OAFlBA,EAlBc,QAoBXG,YACP0B,EAAU,CACR3D,KAAM,UACNc,QAASgB,EAAKhB,QAAQ,GAAGoB,SAAS,GAAGpB,UAIrCgB,EAAKK,MACPwB,EAAU,CACR3D,KAAM,QACNc,QAAS,kCAEX+C,YAAW,WACT7C,EAAQoB,KAAK,OACZ,OAlCe,2CAAH,sDAsCnB,OACE,qCACE,cAAC,EAAD,IACA,sBAAKzC,UAAWC,IAAOyC,UAAvB,UACE,cAAC,IAAD,CAAMW,GAAG,IAAT,SACE,mBAAGrD,UAAS,2CAAsCC,IAAOe,UAE3D,cAAC,IAAD,CACE2B,cAAe,CACba,SAAU,GACVG,MAAO,GACPd,SAAU,GACVe,eAAgB,IAElBO,iBAAkBb,EAClBR,SAAU,SAAAtB,GAAM,OAAIyC,EAAczC,IARpC,SAUE,eAAC,IAAD,CAAMxB,UAAWC,IAAO8C,KAAxB,UACE,oBAAI/C,UAAWC,IAAO+C,SAAtB,mCACA,cAAC,EAAD,CACEnC,KAAK,WACLR,KAAK,OACL4C,GAAG,WACHC,YAAY,YACR,kBAEN,cAAC,EAAD,CACErC,KAAK,QACLR,KAAK,QACL4C,GAAG,QACHC,YAAY,SACR,eAEN,cAAC,EAAD,CACErC,KAAK,WACLR,KAAK,WACL4C,GAAG,WACHC,YAAY,YACR,kBAEN,cAAC,EAAD,CACErC,KAAK,iBACLR,KAAK,WACL4C,GAAG,kBACHC,YAAY,mBACR,yBAEN,cAAC,EAAD,CAAY9C,KAAK,WACjB,mBACEJ,UACkB,YAAhB+D,EAAO1D,KAAP,UACOJ,IAAOR,OADd,UAEOQ,IAAOmE,SAJlB,SAOGL,EAAO5C,sB,kBCvFPkD,EAFDC,YAAY,CAAEC,aApBP,CACnBC,KAAM,CACJvB,GAAI,KACJwB,OAAO,IAiB+BC,QAb1B,CACdC,MACE,SAAC1B,EAAIwB,GAAL,OACA,YAA4B,EAAzBG,UACDC,EAD0B,EAAfA,UACF,CACPL,KAAM,CACJvB,KACAwB,gBCbGK,EAAgBC,YAAWV,G,wCCyBzBW,EA1BF,SAAC,GAAyC,IAAvCnE,EAAsC,EAAtCA,KAAMoE,EAAgC,EAAhCA,OAAQhC,EAAwB,EAAxBA,GAAIiC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC9BC,EAASF,EAATE,KAQR,OACE,sBAAKpF,UAAS,UAAKC,IAAOoF,QAAZ,YAAuBpF,IAAOqF,MAA5C,UACE,wBACExE,QAAS,YATM,WACnB,IAAMwE,EAAOF,EAAKG,MAAK,SAAAC,GAAU,OAAIA,EAAWvC,KAAOA,KACvDqC,EAAKL,QAASK,EAAKL,OACnBE,EAAQ,2BAAKD,GAAN,IAAYE,KAAK,YAAKA,MAOvBK,IAEFzF,UAAS,UAAKC,IAAOyF,OAAZ,YAAsBT,EAAShF,IAAO0F,UAAY,MAJ7D,SAMGV,GAAU,mBAAGjF,UAAU,mBAE1B,mBAAG,cAAY,YAAYA,UAAWC,IAAOmF,KAA7C,SACGvE,QCwLM+E,EAxMF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC3B,EAAgBhB,IAATiB,EAAP,oBAEA,EAAwBpG,mBAAS,CAC/BkB,KAAM,GACNuE,KAAM,KAFR,mBAAOF,EAAP,KAAaC,EAAb,KAKMa,EAAWD,EAAMvB,KAEvB,EAA8B7E,mBAAS,IAAvC,mBAAOwB,EAAP,KAAgBC,EAAhB,KACA,EAAoCzB,mBAAS,CAC3CkB,KAAM,GACNoE,QAAQ,IAFV,mBAAOgB,EAAP,KAAmBC,EAAnB,KAKA,EAAkB1F,cACVG,EADR,oBACQA,KASFwF,EAAa,uCAAG,8BAAA1E,EAAA,sEACGC,MAAM,GAAD,OACvBC,uCADuB,wBACkBqE,EAAS/C,IACrD,CACErB,OAAQ,MACRE,QAAS,CACP,eAAgB,mBAChBsE,cAAc,UAAD,OAAYzF,MAPX,cACduB,EADc,gBAYDA,EAASC,OAZR,OAYdA,EAZc,OAapBgD,EAAQ,CAAEtE,KAAMsB,EAAKtB,KAAMuE,KAAMjD,EAAKiD,OAblB,2CAAH,qDAgBbiB,EAAsB,SAAAC,GAC1B,OAAIpB,EAAKrE,KAAK0F,OAAS,IAGrBnF,EAAW,iCACJ,IAILoF,EAAiB,WACrBV,IACAD,GAAY,IAGRY,EAAgB,uCAAG,sBAAAhF,EAAA,0DACP4E,IADO,gCAGf3E,MAAM,GAAD,OAAIC,uCAAJ,gBAA6C,CACtDC,OAAQ,OACRE,QAAS,CACP,eAAgB,mBAChBsE,cAAc,UAAD,OAAYzF,IAE3BoB,KAAMC,KAAKC,UAAUiD,KATF,OAYrBsB,IAZqB,2CAAH,qDAgBhBE,EAAgB,uCAAG,sBAAAjF,EAAA,0DACP4E,IADO,gCAGf3E,MAAM,GAAD,OAAIC,uCAAJ,wBAA6CoE,EAAMvB,KAAKvB,IAAM,CACvErB,OAAQ,MACRE,QAAS,CACP,eAAgB,mBAChBsE,cAAc,UAAD,OAAYzF,IAE3BoB,KAAMC,KAAKC,UAAUiD,KATF,OAWrBsB,IAXqB,2CAAH,qDAehBG,EAAgB,uCAAG,sBAAAlF,EAAA,sEACjBC,MAAM,GAAD,OAAIC,uCAAJ,wBAA6CoE,EAAMvB,KAAKvB,IAAM,CACvErB,OAAQ,SACRE,QAAS,CACP,eAAgB,mBAChBsE,cAAc,UAAD,OAAYzF,MALN,OASvB6F,IATuB,2CAAH,qDAgBtB,OAJAI,qBAAU,WACc,OAAlBb,EAAMvB,KAAKvB,IAAakD,MAC3B,IAGD,sBAAK,cAAY,OAAOnG,UAAWC,IAAO4G,OAA1C,UACE,gCACE,uBAAO7G,UAAWC,IAAOC,MAAzB,SACE,uBACE4G,SAAU,SAAAC,GAAC,OAAI5B,EAAQ,2BAAKD,GAAN,IAAYrE,KAAMkG,EAAEC,OAAOC,UACjD/D,YAAY,YACZlD,UAAWC,IAAOV,MAClBc,KAAK,OACL4G,MAAO/B,EAAKrE,KACZ,cAAY,YAGhB,qBAAKb,UAAWC,IAAOiH,eAAvB,SACGhC,EAAKE,KAAK+B,KAAI,WAAuBC,GAAvB,IAAGvG,EAAH,EAAGA,KAAMoE,EAAT,EAASA,OAAQhC,EAAjB,EAAiBA,GAAjB,OACb,cAAC,EAAD,CAEEiC,KAAMA,EACNC,QAASA,EACTtE,KAAMA,EACNoE,OAAQA,EACRhC,GAAIA,GALCmE,QASX,qBAAKpH,UAAWC,IAAOoH,kBAAvB,SACE,kCACE,sBAAKrH,UAAWC,IAAOoF,QAAvB,UACE,wBACEvE,QAAS,kBACPoF,EAAc,2BAAKD,GAAN,IAAkBhB,QAASgB,EAAWhB,WAErDjF,UAAS,UAAKC,IAAOyF,OAAZ,YACPO,EAAWhB,OAAShF,IAAO0F,UAAY,MAL3C,SAQGM,EAAWhB,QAAU,mBAAGjF,UAAU,mBAErC,uBACEkD,YAAY,YACZlD,UAAWC,IAAOqH,aAClBjH,KAAK,OACL4G,MAAOhB,EAAWpF,KAClBiG,SAAU,SAAAC,GAAC,OACTb,EAAc,2BAAKD,GAAN,IAAkBpF,KAAMkG,EAAEC,OAAOC,UAEhD,cAAY,aAGhB,sBAAKjH,UAAWC,IAAOsH,iBAAvB,UACE,wBACEzG,QAAS,kBAAMoF,EAAc,CAAErF,KAAM,GAAIoE,QAAQ,KACjDjF,UAAS,UAAKC,IAAOK,IAAZ,YAAmBL,IAAOuH,QAFrC,oBAMA,wBACE1G,QA7IW,WACnBmF,EAAWpF,KAAK0F,OAAS,IAC3BpB,EAAQ,2BAAKD,GAAN,IAAYE,KAAK,GAAD,mBAAMF,EAAKE,MAAX,CAAiBa,OACxCC,EAAc,CAAErF,KAAM,GAAIoE,QAAQ,MA2IxBjF,UAAS,UAAKC,IAAOK,IAAZ,YAAmBL,IAAOwH,KAFrC,iBAMA,mBAAGzH,UAAWC,IAAOkB,QAArB,SAA+BA,eAKvC,sBAAKnB,UAAWC,IAAOkD,OAAvB,WACI6C,EAASvB,OACT,wBACEzE,UAAS,UAAKC,IAAOK,IAAZ,YAAmBL,IAAOyH,QACnC5G,QAAS6F,EAFX,oBAOF,wBACE7F,QAAS,WACP+E,GAAY,IAEd7F,UAAS,UAAKC,IAAOK,IAAZ,YAAmBL,IAAO0H,OAJrC,oBAQA,wBACE7G,QAAS,WACPkF,EAASvB,MAAQgC,IAAqBC,KAExC1G,UAAS,UAAKC,IAAOK,IAAZ,YAAmBL,IAAOwH,KAJrC,yB,iBCpJOG,EA1CI,SAAC,GAAmD,IAAjD/G,EAAgD,EAAhDA,KAAMgH,EAA0C,EAA1CA,aAAc5E,EAA4B,EAA5BA,GAAImC,EAAwB,EAAxBA,KAAMS,EAAkB,EAAlBA,YAoBlD,EAAoBf,IAAXJ,EAAT,oBAEA,OACE,sBACE5D,QAAS,WACP4D,EAAQC,MAAM1B,GAAI,GAClB4C,GAAY,IAEd7F,UAAWC,IAAOiF,KAClB,cAAY,OANd,UAQE,oBAAI,cAAY,eAAelF,UAAWC,IAAOY,KAAjD,SACGA,IAEH,oBAAGb,UAAWC,IAAO6H,SAArB,yBAjCe,WACjB,IAAMC,EAAO,IAAIC,KAAKH,GAChBI,EAAOF,EAAKG,cACdC,EAAQJ,EAAKK,WAAa,EAC1BC,EAAMN,EAAKO,UAKf,OAHIH,EAAQ,KAAIA,EAAK,WAAOA,IACxBE,EAAM,KAAIA,EAAG,WAAOA,IAElB,GAAN,OAAUA,EAAV,YAAiBF,EAAjB,YAA0BF,GAwBoBM,MAC5C,mBAAG,cAAY,aAAavI,UAAWC,IAAOuI,MAA9C,SAtBe,WACjB,IAAM7C,EAAYP,EAAKqD,QAAO,SAAArD,GAAI,OAAoB,IAAhBA,EAAKH,UACrCyD,EAActD,EAAKqD,QAAO,SAAArD,GAAI,OAAoB,IAAhBA,EAAKH,UAE7C,MAAM,cAAN,OAAqBU,EAAUY,OAA/B,yBAAsDmC,EAAYnC,OAAlE,iBAAiFnB,EAAKmB,QAmBjFoC,SCqHMC,EApJG,WAChB,MAAkBpI,cACVG,EADR,oBACQA,KAER,EAAoBmE,IAAXJ,EAAT,oBACA,EAAgC/E,oBAAS,GAAzC,mBAAOkJ,EAAP,KAAiBhD,EAAjB,KAEA,EAA0ClG,mBAAS,IAAnD,mBAAOmJ,EAAP,KAAsBC,EAAtB,KACA,EAAoCpJ,mBAAS,WAA7C,mBAAOqJ,EAAP,KAAmBC,EAAnB,KAEA,EAA0BtJ,mBAAS,IAAnC,mBAAOuJ,EAAP,KAAcC,EAAd,KAEA,EAAgCxJ,oBAAS,GAAzC,mBAAOyJ,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ,uCAAG,8BAAA7H,EAAA,+EAEUC,MAAM,GAAD,OAAIC,uCAAJ,gBAA6C,CACvEC,OAAQ,MACRE,QAAS,CACP,eAAgB,mBAChBsE,cAAc,UAAD,OAAYzF,MANhB,cAEPuB,EAFO,gBAUMA,EAASC,OAVf,OAUPA,EAVO,OAYbgH,EAAShH,GAZI,kDAcbkH,GAAY,GAdC,0DAAH,qDA4Dd,OAJAzC,qBAAU,WACR0C,MACC,IAGD,qCACGT,GAAY,cAAC,EAAD,CAAM/C,aAAcwD,EAAUzD,YAAaA,KACtDuD,GACA,0BACEtI,QAAS,WACH+H,GAAUhD,GAAY,IAE5B7F,UAAS,UAAKC,IAAOsJ,UAAZ,YAAyBV,EAAW5I,IAAOuJ,KAAO,MAJ7D,UAME,cAAC,EAAD,IACA,sBAAKxJ,UAAWC,IAAOwJ,KAAvB,UACE,sBAAKzJ,UAAWC,IAAOW,OAAvB,UACE,uBAAOZ,UAAWC,IAAOC,MAAzB,SACE,uBACE,cAAY,eACZF,UAAWC,IAAOV,MAClB2D,YAAY,SACZ7C,KAAK,OACL4G,MAAO6B,EACPhC,SAAU,SAAAC,GAAC,OAAIgC,EAAiBhC,EAAEC,OAAOC,YAG7C,uBAAOjH,UAAWC,IAAOyJ,YAAzB,SACE,yBACE,cAAY,cACZ5C,SAAU,SAAAC,GAAC,OAAIkC,EAAclC,EAAEC,OAAOC,QACtCjH,UAAS,UAAKC,IAAOV,MAAZ,YAAqBU,IAAO0J,QACrC1C,MAAO+B,EAJT,UAME,wBAAQ/B,MAAM,UAAU2C,UAAQ,EAAhC,qBAGA,wBAAQ3C,MAAM,YAAd,kCACA,wBAAQA,MAAM,cAAd,mCACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,gCAIN,qBAAKjH,UAAWC,IAAO4J,MAAvB,SACGX,EACET,QApFW,SAAAvD,GACxB,OAAOA,EAAKrE,KAAKiJ,cAAcC,SAASjB,EAAcgB,kBAoFzCE,MAtES,SAACC,EAAcC,GACrC,IAAMvE,EAZe,SAACsE,EAAcC,GAQpC,MAAO,CAAEC,eAPcF,EAAa7E,KAAKqD,QACvC,SAAAnD,GAAI,OAAoB,IAAhBA,EAAKL,UAMUmF,gBAJDF,EAAc9E,KAAKqD,QACzC,SAAAnD,GAAI,OAAoB,IAAhBA,EAAKL,WAOGoF,CAAeJ,EAAcC,GAC/C,OAAQlB,GACN,IAAK,YACH,OACErD,EAAUyE,gBAAgB7D,OAASZ,EAAUwE,eAAe5D,OAGhE,IAAK,cACH,OACEZ,EAAUwE,eAAe5D,OAASZ,EAAUyE,gBAAgB7D,OAGhE,IAAK,SACH,OAAO,IAAIyB,KAAKiC,EAAapC,cAC3B,IAAIG,KAAKkC,EAAcrC,eACpB,EACD,EACN,IAAK,SACH,OAAOqC,EAAc9E,KAAKmB,OAAS0D,EAAa7E,KAAKmB,WAoD5CY,KAAI,YAAuC,IAApClE,EAAmC,EAAnCA,GAAIpC,EAA+B,EAA/BA,KAAMgH,EAAyB,EAAzBA,aAAczC,EAAW,EAAXA,KAC9B,OACE,cAAC,EAAD,CACEnC,GAAIA,EAEJpC,KAAMA,EACNgH,aAAcA,EACdzC,KAAMA,EACNS,YAAaA,EACbgD,SAAUA,GALL5F,QAUf,qBAAKjD,UAAWC,IAAOqK,iBAAvB,SACE,wBACExJ,QAAS,WACP4D,EAAQC,MAAM,MAAM,GACfkE,GAAUhD,GAAY,IAE7B7F,UAAWC,IAAOK,kBCjHnBiK,EAtBH,WACV,MAAkB/J,cACVG,EADR,oBACQA,KACR,OACE,mCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6J,OAAK,EAACC,KAAK,aAAlB,SACG9J,EAAO,cAAC,EAAD,IAAgB,cAAC,IAAD,CAAU0C,GAAG,QAEvC,cAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,gBAAlB,SACG9J,EAAO,cAAC,IAAD,CAAU0C,GAAG,eAAkB,cAAC,EAAD,MAEzC,cAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,IAAlB,SACG9J,EAAO,cAAC,IAAD,CAAU0C,GAAG,eAAkB,cAAC,EAAD,c,OCpBnDqH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B5L,EAAOC,QAAU,CAAC,OAAS,qBAAqB,kBAAoB,gCAAgC,eAAiB,6BAA6B,MAAQ,oBAAoB,MAAQ,oBAAoB,aAAe,2BAA2B,QAAU,sBAAsB,OAAS,qBAAqB,iBAAmB,+BAA+B,IAAM,kBAAkB,OAAS,qBAAqB,IAAM,kBAAkB,OAAS,qBAAqB,MAAQ,oBAAoB,OAAS,qBAAqB,KAAO,mBAAmB,KAAO,mBAAmB,UAAY,wBAAwB,WAAW,uBAAuB,QAAU,wB,mBCA9oBD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,uBAAuB,KAAO,uB,mBCAjJD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,4B,mBCAlID,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,MAAQ,uB,mBCApFD,EAAOC,QAAU,CAAC,IAAM,2B","file":"static/js/main.acb2abe6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__DLp8M\",\"formText\":\"Auth_formText__IrzHq\",\"form\":\"Auth_form__1U8iO\",\"icon\":\"Auth_icon__U5zUR\",\"action\":\"Auth_action__r8qKH\",\"link\":\"Auth_link__2vbjZ\",\"text\":\"Auth_text__2mK62\",\"error\":\"Auth_error__Rd2bV\",\"success\":\"Auth_success__3ErGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__1l120\",\"main\":\"Dashboard_main__3SXLX\",\"header\":\"Dashboard_header__2n_LS\",\"containerNewTodo\":\"Dashboard_containerNewTodo__yC2o2\",\"btn\":\"Dashboard_btn__1mwS5\",\"label\":\"Dashboard_label__1NCam\",\"labelSelect\":\"Dashboard_labelSelect__2W2OF\",\"field\":\"Dashboard_field__3O5NP\",\"select\":\"Dashboard_select__2bT_A\",\"blur\":\"Dashboard_blur__2V9gS\"};","import styles from './Field.module.css';\r\nimport { useField } from 'formik';\r\nimport { useState } from 'react';\r\n\r\nconst Field = ({ ...rest }) => {\r\n  const [field, meta] = useField(rest);\r\n\r\n  const error = meta.touched && meta.error ? meta.error : '';\r\n  const [focus, setFocus] = useState(false);\r\n\r\n  return (\r\n    <label\r\n      onFocus={() => setFocus(!focus)}\r\n      onBlur={() => setFocus(!focus)}\r\n      className={styles.label}\r\n    >\r\n      <input\r\n        {...rest}\r\n        {...field}\r\n        className={styles.field}\r\n        data-testid=\"input\"\r\n      />\r\n      <p data-testid=\"message-validation\" className={styles.error}>\r\n        {error}\r\n      </p>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Field;\r\n","import styles from './FormButton.module.css';\r\n\r\nconst FormButton = ({ text }) => {\r\n  return (\r\n    <button data-testid=\"btn-auth\" type=\"submit\" className={styles.btn}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import { useCookies } from 'react-cookie';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n  const [cookies, , removeCookie] = useCookies();\r\n\r\n  const { user } = cookies;\r\n  const logOut = () => {\r\n    removeCookie('user');\r\n  };\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <div>\r\n        <h2 className={styles.name}>ToDo-List</h2>\r\n      </div>\r\n      {user && (\r\n        <div>\r\n          <button onClick={logOut} className={styles.button}>\r\n            <i className={`fas fa-sign-out-alt ${styles.icon}`}></i>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Link, useHistory } from 'react-router-dom';\r\nimport Field from '../Formik/Field';\r\nimport FormButton from '../Formik/FormButton';\r\nimport { Formik, Form } from 'formik';\r\nimport styles from './Auth.module.css';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useState } from 'react';\r\nimport Header from '../Header/Header';\r\n\r\nconst Login = () => {\r\n  const [, setCookie] = useCookies();\r\n  const [message, setMessage] = useState('');\r\n  const history = useHistory();\r\n\r\n  const signIn = async values => {\r\n    const response = await fetch(`${process.env.REACT_APP_API}/auth/local`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(values),\r\n    });\r\n\r\n    const json = await response.json();\r\n    console.log(json);\r\n    if (json.statusCode === 400) {\r\n      setMessage(json.message[0].messages[0].message);\r\n      return;\r\n    }\r\n\r\n    if (json.jwt) {\r\n      setCookie('user', json.jwt);\r\n      history.push('/dashboard');\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className={styles.container}>\r\n        <Formik\r\n          initialValues={{\r\n            identifier: '',\r\n            password: '',\r\n          }}\r\n          onSubmit={values => signIn(values)}\r\n        >\r\n          <Form className={styles.form}>\r\n            <h3 className={styles.formText} data-testid=\"headline\">\r\n              Login\r\n            </h3>\r\n            <Field\r\n              name=\"identifier\"\r\n              type=\"text\"\r\n              id=\"identifier\"\r\n              placeholder=\"Email or Username\"\r\n              key=\"identifier-field\"\r\n            />\r\n\r\n            <Field\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              key=\"password-field\"\r\n            />\r\n            <p className={styles.error}>{message}</p>\r\n            <FormButton text=\"Login\" />\r\n          </Form>\r\n        </Formik>\r\n        <div className={styles.action}>\r\n          <span className={styles.text}>or</span>\r\n          <Link className={styles.link} to=\"/registration\">\r\n            create an account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import * as yup from 'yup';\r\n\r\nexport const validation = yup.object({\r\n  username: yup\r\n    .string()\r\n    .min(1, 'Must be at least 2 characters long')\r\n    .defined('Field is required'),\r\n  email: yup.string().email('Email is invalid').defined('Email is required'),\r\n  password: yup\r\n    .string()\r\n    .min(8, 'Password to short! Must be at least 8 characters long')\r\n    .defined('Field is required'),\r\n  repeatPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref('password'), null], 'Passwords do not match')\r\n    .defined('Field is required'),\r\n});\r\n","import { Formik, Form } from 'formik';\r\nimport FormButton from '../Formik/FormButton';\r\nimport Field from '../Formik/Field';\r\nimport styles from './Auth.module.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { validation } from '../Formik/validationSignUp';\r\nimport { useState } from 'react';\r\nimport Header from '../Header/Header';\r\n\r\nconst SignUp = () => {\r\n  const [status, setStatus] = useState({\r\n    type: '',\r\n    message: '',\r\n  });\r\n\r\n  console.log(process.env.REACT_APP_API);\r\n  const history = useHistory();\r\n\r\n  const createAccount = async values => {\r\n    const user = {\r\n      username: values.username,\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_API}/auth/local/register`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n      }\r\n    );\r\n\r\n    const json = await response.json();\r\n\r\n    if (json.statusCode === 400) {\r\n      setStatus({\r\n        type: 'invalid',\r\n        message: json.message[0].messages[0].message,\r\n      });\r\n    }\r\n\r\n    if (json.jwt) {\r\n      setStatus({\r\n        type: 'valid',\r\n        message: 'Your account has been created',\r\n      });\r\n      setTimeout(() => {\r\n        history.push('/');\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className={styles.container}>\r\n        <Link to=\"/\">\r\n          <i className={`fas fa-long-arrow-alt-left fa-3x ${styles.icon}`}></i>\r\n        </Link>\r\n        <Formik\r\n          initialValues={{\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n          }}\r\n          validationSchema={validation}\r\n          onSubmit={values => createAccount(values)}\r\n        >\r\n          <Form className={styles.form}>\r\n            <h3 className={styles.formText}>Create an new account</h3>\r\n            <Field\r\n              name=\"username\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n              placeholder=\"Username\"\r\n              key=\"username-field\"\r\n            />\r\n            <Field\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Email\"\r\n              key=\"email-field\"\r\n            />\r\n            <Field\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              key=\"password-field\"\r\n            />\r\n            <Field\r\n              name=\"repeatPassword\"\r\n              type=\"password\"\r\n              id=\"repeat-password\"\r\n              placeholder=\"Repeat password\"\r\n              key=\"repeat-password-field\"\r\n            />\r\n            <FormButton text=\"Create\" />\r\n            <p\r\n              className={\r\n                status.type === 'invalid'\r\n                  ? `${styles.error}`\r\n                  : `${styles.success}`\r\n              }\r\n            >\r\n              {status.message}\r\n            </p>\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { Action, createStore } from 'react-sweet-state';\r\n\r\nconst initialState = {\r\n  data: {\r\n    id: null,\r\n    isNew: true,\r\n  },\r\n};\r\n\r\nconst actions = {\r\n  getId:\r\n    (id, isNew) =>\r\n    ({ getState, setState }) => {\r\n      setState({\r\n        data: {\r\n          id,\r\n          isNew,\r\n        },\r\n      });\r\n    },\r\n};\r\n\r\nconst Store = createStore({ initialState, actions });\r\n\r\nexport default Store;\r\n","import { createHook } from 'react-sweet-state';\r\nimport Store from './store';\r\n\r\nexport const useSweetState = createHook(Store);\r\n","import styles from '../List.module.css';\r\n\r\nconst Todo = ({ name, isDone, id, list, setList }) => {\r\n  const { task } = list;\r\n\r\n  const toggleStatus = () => {\r\n    const todo = task.find(singleTodo => singleTodo.id === id);\r\n    todo.isDone = todo.isDone ? false : true;\r\n    setList({ ...list, task: [...task] });\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.content} ${styles.todo}`}>\r\n      <button\r\n        onClick={() => {\r\n          toggleStatus();\r\n        }}\r\n        className={`${styles.square} ${isDone ? styles.completed : null}`}\r\n      >\r\n        {isDone && <i className=\"fas fa-check\" />}\r\n      </button>\r\n      <p data-testid=\"todo-name\" className={styles.task}>\r\n        {name}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import styles from './List.module.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport Todo from './Todo/Todo';\r\nimport { useSweetState } from '../../../../store/sub';\r\n\r\nconst List = ({ setOpenList, refreshLists }) => {\r\n  const [state] = useSweetState();\r\n\r\n  const [list, setList] = useState({\r\n    name: '',\r\n    task: [],\r\n  });\r\n\r\n  const listData = state.data;\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [singleTask, setSingleTask] = useState({\r\n    name: '',\r\n    isDone: false,\r\n  });\r\n\r\n  const [cookies] = useCookies();\r\n  const { user } = cookies;\r\n\r\n  const handleAddNewTodo = () => {\r\n    if (singleTask.name.length > 0) {\r\n      setList({ ...list, task: [...list.task, singleTask] });\r\n      setSingleTask({ name: '', isDone: false });\r\n    }\r\n  };\r\n\r\n  const getSingleList = async () => {\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_API}/to-do-lists/${listData.id}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${user}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    const json = await response.json();\r\n    setList({ name: json.name, task: json.task });\r\n  };\r\n\r\n  const checkNameIsNotEmpty = x => {\r\n    if (list.name.length > 0) {\r\n      return true;\r\n    } else {\r\n      setMessage('Name of list cannot be empty');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const closeAndUpdate = () => {\r\n    refreshLists();\r\n    setOpenList(false);\r\n  };\r\n\r\n  const handleCreateList = async () => {\r\n    const correct = checkNameIsNotEmpty();\r\n    if (correct) {\r\n      await fetch(`${process.env.REACT_APP_API}/to-do-lists`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${user}`,\r\n        },\r\n        body: JSON.stringify(list),\r\n      });\r\n\r\n      closeAndUpdate();\r\n    }\r\n  };\r\n\r\n  const handleUpdateList = async () => {\r\n    const correct = checkNameIsNotEmpty();\r\n    if (correct) {\r\n      await fetch(`${process.env.REACT_APP_API}/to-do-lists/${state.data.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${user}`,\r\n        },\r\n        body: JSON.stringify(list),\r\n      });\r\n      closeAndUpdate();\r\n    }\r\n  };\r\n\r\n  const handleDeleteList = async () => {\r\n    await fetch(`${process.env.REACT_APP_API}/to-do-lists/${state.data.id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${user}`,\r\n      },\r\n    });\r\n\r\n    closeAndUpdate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state.data.id !== null) getSingleList();\r\n  }, []);\r\n\r\n  return (\r\n    <div data-testid=\"list\" className={styles.create}>\r\n      <div>\r\n        <label className={styles.label}>\r\n          <input\r\n            onChange={e => setList({ ...list, name: e.target.value })}\r\n            placeholder=\"List name\"\r\n            className={styles.field}\r\n            type=\"text\"\r\n            value={list.name}\r\n            data-testid=\"input\"\r\n          />\r\n        </label>\r\n        <div className={styles.containerTodos}>\r\n          {list.task.map(({ name, isDone, id }, key) => (\r\n            <Todo\r\n              key={key}\r\n              list={list}\r\n              setList={setList}\r\n              name={name}\r\n              isDone={isDone}\r\n              id={id}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className={styles.containerAddInput}>\r\n          <label>\r\n            <div className={styles.content}>\r\n              <button\r\n                onClick={() =>\r\n                  setSingleTask({ ...singleTask, isDone: !singleTask.isDone })\r\n                }\r\n                className={`${styles.square} ${\r\n                  singleTask.isDone ? styles.completed : null\r\n                }`}\r\n              >\r\n                {singleTask.isDone && <i className=\"fas fa-check\" />}\r\n              </button>\r\n              <input\r\n                placeholder=\"Task name\"\r\n                className={styles.fieldAddTask}\r\n                type=\"text\"\r\n                value={singleTask.name}\r\n                onChange={e =>\r\n                  setSingleTask({ ...singleTask, name: e.target.value })\r\n                }\r\n                data-testid=\"input\"\r\n              />\r\n            </div>\r\n            <div className={styles.containerButtons}>\r\n              <button\r\n                onClick={() => setSingleTask({ name: '', isDone: false })}\r\n                className={`${styles.btn} ${styles.cancel}`}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleAddNewTodo}\r\n                className={`${styles.btn} ${styles.add}`}\r\n              >\r\n                Add\r\n              </button>\r\n              <p className={styles.message}>{message}</p>\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className={styles.action}>\r\n        {!listData.isNew && (\r\n          <button\r\n            className={`${styles.btn} ${styles.delete}`}\r\n            onClick={handleDeleteList}\r\n          >\r\n            Delete\r\n          </button>\r\n        )}\r\n        <button\r\n          onClick={() => {\r\n            setOpenList(false);\r\n          }}\r\n          className={`${styles.btn} ${styles.close}`}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            listData.isNew ? handleCreateList() : handleUpdateList();\r\n          }}\r\n          className={`${styles.btn} ${styles.add}`}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import styles from './SingleList.module.css';\r\nimport { useSweetState } from '../../../../store/sub';\r\n\r\nconst SingleList = ({ name, published_at, id, task, setOpenList }) => {\r\n  const formatDate = () => {\r\n    const date = new Date(published_at);\r\n    const year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    if (month < 10) month = `0${month}`;\r\n    if (day < 10) day = `0${day}`;\r\n\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n\r\n  const countTasks = () => {\r\n    const completed = task.filter(task => task.isDone === true);\r\n    const unCompleted = task.filter(task => task.isDone === false);\r\n\r\n    return `Completed: ${completed.length} Uncompleted: ${unCompleted.length} All: ${task.length}`;\r\n  };\r\n\r\n  const [, actions] = useSweetState();\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        actions.getId(id, false);\r\n        setOpenList(true);\r\n      }}\r\n      className={styles.list}\r\n      data-testid=\"list\"\r\n    >\r\n      <h5 data-testid=\"name-of-list\" className={styles.name}>\r\n        {name}\r\n      </h5>\r\n      <p className={styles.listDate}>Created at: {formatDate()}</p>\r\n      <p data-testid=\"count-list\" className={styles.count}>\r\n        {countTasks()}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleList;\r\n","import { useEffect, useState } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useSweetState } from '../../store/sub';\r\nimport Header from '../Header/Header';\r\nimport styles from './Dashboard.module.css';\r\nimport List from './TodoList/List/List';\r\nimport SingleList from './TodoList/SingleList/SingleList';\r\n\r\nconst Dashboard = () => {\r\n  const [cookies] = useCookies();\r\n  const { user } = cookies;\r\n\r\n  const [, actions] = useSweetState();\r\n  const [openList, setOpenList] = useState(false);\r\n\r\n  const [searchKeyWord, setSearchKeyWord] = useState('');\r\n  const [sortOption, setSortOption] = useState('Sort by');\r\n\r\n  const [lists, setLists] = useState([]);\r\n\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const getLists = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API}/to-do-lists`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${user}`,\r\n        },\r\n      });\r\n\r\n      const json = await response.json();\r\n\r\n      setLists(json);\r\n    } catch {\r\n      setHasError(true);\r\n    }\r\n  };\r\n\r\n  const handleSearchLists = list => {\r\n    return list.name.toLowerCase().includes(searchKeyWord.toLowerCase());\r\n  };\r\n\r\n  const filterByStatus = (firstElement, secondElement) => {\r\n    const firstCompleted = firstElement.task.filter(\r\n      todo => todo.isDone === true\r\n    );\r\n    const secondCompleted = secondElement.task.filter(\r\n      todo => todo.isDone === true\r\n    );\r\n\r\n    return { firstCompleted, secondCompleted };\r\n  };\r\n\r\n  const handleSortLists = (firstElement, secondElement) => {\r\n    const completed = filterByStatus(firstElement, secondElement);\r\n    switch (sortOption) {\r\n      case 'completed':\r\n        return (\r\n          completed.secondCompleted.length - completed.firstCompleted.length\r\n        );\r\n\r\n      case 'uncompleted':\r\n        return (\r\n          completed.firstCompleted.length - completed.secondCompleted.length\r\n        );\r\n\r\n      case 'latest':\r\n        return new Date(firstElement.published_at) >\r\n          new Date(secondElement.published_at)\r\n          ? -1\r\n          : 1;\r\n      case 'amount':\r\n        return secondElement.task.length - firstElement.task.length;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLists();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {openList && <List refreshLists={getLists} setOpenList={setOpenList} />}\r\n      {!hasError && (\r\n        <section\r\n          onClick={() => {\r\n            if (openList) setOpenList(false);\r\n          }}\r\n          className={`${styles.dashboard} ${openList ? styles.blur : null}`}\r\n        >\r\n          <Header />\r\n          <div className={styles.main}>\r\n            <div className={styles.header}>\r\n              <label className={styles.label}>\r\n                <input\r\n                  data-testid=\"input-search\"\r\n                  className={styles.field}\r\n                  placeholder=\"Search\"\r\n                  type=\"text\"\r\n                  value={searchKeyWord}\r\n                  onChange={e => setSearchKeyWord(e.target.value)}\r\n                />\r\n              </label>\r\n              <label className={styles.labelSelect}>\r\n                <select\r\n                  data-testid=\"select-sort\"\r\n                  onChange={e => setSortOption(e.target.value)}\r\n                  className={`${styles.field} ${styles.select}`}\r\n                  value={sortOption}\r\n                >\r\n                  <option value=\"Sort by\" disabled>\r\n                    Sort by\r\n                  </option>\r\n                  <option value=\"completed\">Most completed tasks</option>\r\n                  <option value=\"uncompleted\">Least completed tasks</option>\r\n                  <option value=\"latest\">Latest</option>\r\n                  <option value=\"amount\">Most tasks</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            <div className={styles.todos}>\r\n              {lists\r\n                .filter(handleSearchLists)\r\n                .sort(handleSortLists)\r\n                .map(({ id, name, published_at, task }) => {\r\n                  return (\r\n                    <SingleList\r\n                      id={id}\r\n                      key={id}\r\n                      name={name}\r\n                      published_at={published_at}\r\n                      task={task}\r\n                      setOpenList={setOpenList}\r\n                      openList={openList}\r\n                    />\r\n                  );\r\n                })}\r\n            </div>\r\n            <div className={styles.containerNewTodo}>\r\n              <button\r\n                onClick={() => {\r\n                  actions.getId(null, true);\r\n                  if (!openList) setOpenList(true);\r\n                }}\r\n                className={styles.btn}\r\n              ></button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { useCookies } from 'react-cookie';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Login from './components/Auth/Login';\nimport SignUp from './components/Auth/SignUp';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nconst App = () => {\n  const [cookies] = useCookies();\n  const { user } = cookies;\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route exact path=\"/dashboard\">\n            {user ? <Dashboard /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route exact path=\"/registration\">\n            {user ? <Redirect to=\"/dashboard\" /> : <SignUp />}\n          </Route>\n          <Route exact path=\"/\">\n            {user ? <Redirect to=\"/dashboard\" /> : <Login />}\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './stylesheets/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"create\":\"List_create__2-pVh\",\"containerAddInput\":\"List_containerAddInput__1Y6VN\",\"containerTodos\":\"List_containerTodos__IzZwJ\",\"label\":\"List_label__RTqw5\",\"field\":\"List_field__2v575\",\"fieldAddTask\":\"List_fieldAddTask__20wqd\",\"content\":\"List_content__21NjZ\",\"square\":\"List_square__2CnO7\",\"containerButtons\":\"List_containerButtons__2nWtq\",\"btn\":\"List_btn__2H9SS\",\"cancel\":\"List_cancel__1FGW-\",\"add\":\"List_add__1BhEi\",\"action\":\"List_action__10mlQ\",\"close\":\"List_close__vmuVI\",\"delete\":\"List_delete__3xIQA\",\"task\":\"List_task__1JwwN\",\"todo\":\"List_todo__b0dEm\",\"completed\":\"List_completed__7t-48\",\"fa-check\":\"List_fa-check__1xGqX\",\"message\":\"List_message__3ilOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__lKNbk\",\"name\":\"Header_name__2LKKb\",\"icon\":\"Header_icon__38Vt7\",\"button\":\"Header_button__1Mz9f\",\"blur\":\"Header_blur__tXJLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"SingleList_list__2NsRq\",\"listDate\":\"SingleList_listDate__2EhzS\",\"name\":\"SingleList_name__3RhUu\",\"count\":\"SingleList_count__1ENwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Field_label__25TRj\",\"field\":\"Field_field__gEjah\",\"error\":\"Field_error__1Gnx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FormButton_btn__3wAi0\"};"],"sourceRoot":""}